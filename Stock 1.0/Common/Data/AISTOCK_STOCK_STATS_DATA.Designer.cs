//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace AISRS.Common.Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("AISTOCK_STOCK_STATS_DATA")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class AISTOCK_STOCK_STATS_DATA : global::System.Data.DataSet {
        
        private AISTOCK_STOCK_INFORMATIONDataTable tableAISTOCK_STOCK_INFORMATION;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AISTOCK_STOCK_STATS_DATA() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected AISTOCK_STOCK_STATS_DATA(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["AISTOCK_STOCK_INFORMATION"] != null)) {
                    base.Tables.Add(new AISTOCK_STOCK_INFORMATIONDataTable(ds.Tables["AISTOCK_STOCK_INFORMATION"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AISTOCK_STOCK_INFORMATIONDataTable AISTOCK_STOCK_INFORMATION {
            get {
                return this.tableAISTOCK_STOCK_INFORMATION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            AISTOCK_STOCK_STATS_DATA cln = ((AISTOCK_STOCK_STATS_DATA)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["AISTOCK_STOCK_INFORMATION"] != null)) {
                    base.Tables.Add(new AISTOCK_STOCK_INFORMATIONDataTable(ds.Tables["AISTOCK_STOCK_INFORMATION"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableAISTOCK_STOCK_INFORMATION = ((AISTOCK_STOCK_INFORMATIONDataTable)(base.Tables["AISTOCK_STOCK_INFORMATION"]));
            if ((initTable == true)) {
                if ((this.tableAISTOCK_STOCK_INFORMATION != null)) {
                    this.tableAISTOCK_STOCK_INFORMATION.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "AISTOCK_STOCK_STATS_DATA";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AISTOCK_STOCK_STATS_DATA.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAISTOCK_STOCK_INFORMATION = new AISTOCK_STOCK_INFORMATIONDataTable();
            base.Tables.Add(this.tableAISTOCK_STOCK_INFORMATION);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAISTOCK_STOCK_INFORMATION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            AISTOCK_STOCK_STATS_DATA ds = new AISTOCK_STOCK_STATS_DATA();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AISTOCK_STOCK_INFORMATIONRowChangeEventHandler(object sender, AISTOCK_STOCK_INFORMATIONRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AISTOCK_STOCK_INFORMATIONDataTable : global::System.Data.TypedTableBase<AISTOCK_STOCK_INFORMATIONRow> {
            
            private global::System.Data.DataColumn columnSTOCK_ID;
            
            private global::System.Data.DataColumn columnSTOCK_CODE;
            
            private global::System.Data.DataColumn columnSTOCK_NAME;
            
            private global::System.Data.DataColumn columnSTOCK_DAY;
            
            private global::System.Data.DataColumn columnTODAY_BEGIN;
            
            private global::System.Data.DataColumn columnYESTERDAY_END;
            
            private global::System.Data.DataColumn columnTODAY_END;
            
            private global::System.Data.DataColumn columnMAX_PRICE;
            
            private global::System.Data.DataColumn columnMIN_PRICE;
            
            private global::System.Data.DataColumn columnBUY_PRICE;
            
            private global::System.Data.DataColumn columnSELL_PRICE;
            
            private global::System.Data.DataColumn columnQUANTITY;
            
            private global::System.Data.DataColumn columnTOTAL_MONEY;
            
            private global::System.Data.DataColumn columnBUY_ONE_PRICE;
            
            private global::System.Data.DataColumn columnBUY_ONE_QUANTITY;
            
            private global::System.Data.DataColumn columnBUY_TWO_PRICE;
            
            private global::System.Data.DataColumn columnBUY_TWO_QUANTITY;
            
            private global::System.Data.DataColumn columnBUY_THD_PRICE;
            
            private global::System.Data.DataColumn columnBUY_THD_QUANTITY;
            
            private global::System.Data.DataColumn columnBUY_FOU_PRICE;
            
            private global::System.Data.DataColumn columnBUY_FOU_QUANTITY;
            
            private global::System.Data.DataColumn columnBUY_FIF_PRICE;
            
            private global::System.Data.DataColumn columnBUY_FIF_QUANTITY;
            
            private global::System.Data.DataColumn columnSELL_ONE_PRICE;
            
            private global::System.Data.DataColumn columnSELL_ONE_QUANTITY;
            
            private global::System.Data.DataColumn columnSELL_TWO_PRICE;
            
            private global::System.Data.DataColumn columnSELL_TWO_QUANTITY;
            
            private global::System.Data.DataColumn columnSELL_THD_PRICE;
            
            private global::System.Data.DataColumn columnSELL_THD_QUANTITY;
            
            private global::System.Data.DataColumn columnSELL_FOU_PRICE;
            
            private global::System.Data.DataColumn columnSELL_FOU_QUANTITY;
            
            private global::System.Data.DataColumn columnSELL_FIF_PRICE;
            
            private global::System.Data.DataColumn columnSELL_FIF_QUANTITY;
            
            private global::System.Data.DataColumn columnINCREASE_PERCENT;
            
            private global::System.Data.DataColumn columnCHART;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AISTOCK_STOCK_INFORMATIONDataTable() {
                this.TableName = "AISTOCK_STOCK_INFORMATION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AISTOCK_STOCK_INFORMATIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AISTOCK_STOCK_INFORMATIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STOCK_IDColumn {
                get {
                    return this.columnSTOCK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STOCK_CODEColumn {
                get {
                    return this.columnSTOCK_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STOCK_NAMEColumn {
                get {
                    return this.columnSTOCK_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STOCK_DAYColumn {
                get {
                    return this.columnSTOCK_DAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TODAY_BEGINColumn {
                get {
                    return this.columnTODAY_BEGIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YESTERDAY_ENDColumn {
                get {
                    return this.columnYESTERDAY_END;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TODAY_ENDColumn {
                get {
                    return this.columnTODAY_END;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MAX_PRICEColumn {
                get {
                    return this.columnMAX_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MIN_PRICEColumn {
                get {
                    return this.columnMIN_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BUY_PRICEColumn {
                get {
                    return this.columnBUY_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SELL_PRICEColumn {
                get {
                    return this.columnSELL_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QUANTITYColumn {
                get {
                    return this.columnQUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOTAL_MONEYColumn {
                get {
                    return this.columnTOTAL_MONEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BUY_ONE_PRICEColumn {
                get {
                    return this.columnBUY_ONE_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BUY_ONE_QUANTITYColumn {
                get {
                    return this.columnBUY_ONE_QUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BUY_TWO_PRICEColumn {
                get {
                    return this.columnBUY_TWO_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BUY_TWO_QUANTITYColumn {
                get {
                    return this.columnBUY_TWO_QUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BUY_THD_PRICEColumn {
                get {
                    return this.columnBUY_THD_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BUY_THD_QUANTITYColumn {
                get {
                    return this.columnBUY_THD_QUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BUY_FOU_PRICEColumn {
                get {
                    return this.columnBUY_FOU_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BUY_FOU_QUANTITYColumn {
                get {
                    return this.columnBUY_FOU_QUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BUY_FIF_PRICEColumn {
                get {
                    return this.columnBUY_FIF_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BUY_FIF_QUANTITYColumn {
                get {
                    return this.columnBUY_FIF_QUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SELL_ONE_PRICEColumn {
                get {
                    return this.columnSELL_ONE_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SELL_ONE_QUANTITYColumn {
                get {
                    return this.columnSELL_ONE_QUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SELL_TWO_PRICEColumn {
                get {
                    return this.columnSELL_TWO_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SELL_TWO_QUANTITYColumn {
                get {
                    return this.columnSELL_TWO_QUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SELL_THD_PRICEColumn {
                get {
                    return this.columnSELL_THD_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SELL_THD_QUANTITYColumn {
                get {
                    return this.columnSELL_THD_QUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SELL_FOU_PRICEColumn {
                get {
                    return this.columnSELL_FOU_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SELL_FOU_QUANTITYColumn {
                get {
                    return this.columnSELL_FOU_QUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SELL_FIF_PRICEColumn {
                get {
                    return this.columnSELL_FIF_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SELL_FIF_QUANTITYColumn {
                get {
                    return this.columnSELL_FIF_QUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INCREASE_PERCENTColumn {
                get {
                    return this.columnINCREASE_PERCENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHARTColumn {
                get {
                    return this.columnCHART;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AISTOCK_STOCK_INFORMATIONRow this[int index] {
                get {
                    return ((AISTOCK_STOCK_INFORMATIONRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AISTOCK_STOCK_INFORMATIONRowChangeEventHandler AISTOCK_STOCK_INFORMATIONRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AISTOCK_STOCK_INFORMATIONRowChangeEventHandler AISTOCK_STOCK_INFORMATIONRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AISTOCK_STOCK_INFORMATIONRowChangeEventHandler AISTOCK_STOCK_INFORMATIONRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AISTOCK_STOCK_INFORMATIONRowChangeEventHandler AISTOCK_STOCK_INFORMATIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAISTOCK_STOCK_INFORMATIONRow(AISTOCK_STOCK_INFORMATIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AISTOCK_STOCK_INFORMATIONRow AddAISTOCK_STOCK_INFORMATIONRow(
                        string STOCK_ID, 
                        string STOCK_CODE, 
                        string STOCK_NAME, 
                        string STOCK_DAY, 
                        decimal TODAY_BEGIN, 
                        decimal YESTERDAY_END, 
                        decimal TODAY_END, 
                        decimal MAX_PRICE, 
                        decimal MIN_PRICE, 
                        decimal BUY_PRICE, 
                        decimal SELL_PRICE, 
                        int QUANTITY, 
                        decimal TOTAL_MONEY, 
                        decimal BUY_ONE_PRICE, 
                        int BUY_ONE_QUANTITY, 
                        decimal BUY_TWO_PRICE, 
                        int BUY_TWO_QUANTITY, 
                        decimal BUY_THD_PRICE, 
                        int BUY_THD_QUANTITY, 
                        decimal BUY_FOU_PRICE, 
                        int BUY_FOU_QUANTITY, 
                        decimal BUY_FIF_PRICE, 
                        int BUY_FIF_QUANTITY, 
                        decimal SELL_ONE_PRICE, 
                        int SELL_ONE_QUANTITY, 
                        decimal SELL_TWO_PRICE, 
                        int SELL_TWO_QUANTITY, 
                        decimal SELL_THD_PRICE, 
                        int SELL_THD_QUANTITY, 
                        decimal SELL_FOU_PRICE, 
                        int SELL_FOU_QUANTITY, 
                        decimal SELL_FIF_PRICE, 
                        int SELL_FIF_QUANTITY, 
                        decimal INCREASE_PERCENT, 
                        string CHART) {
                AISTOCK_STOCK_INFORMATIONRow rowAISTOCK_STOCK_INFORMATIONRow = ((AISTOCK_STOCK_INFORMATIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        STOCK_ID,
                        STOCK_CODE,
                        STOCK_NAME,
                        STOCK_DAY,
                        TODAY_BEGIN,
                        YESTERDAY_END,
                        TODAY_END,
                        MAX_PRICE,
                        MIN_PRICE,
                        BUY_PRICE,
                        SELL_PRICE,
                        QUANTITY,
                        TOTAL_MONEY,
                        BUY_ONE_PRICE,
                        BUY_ONE_QUANTITY,
                        BUY_TWO_PRICE,
                        BUY_TWO_QUANTITY,
                        BUY_THD_PRICE,
                        BUY_THD_QUANTITY,
                        BUY_FOU_PRICE,
                        BUY_FOU_QUANTITY,
                        BUY_FIF_PRICE,
                        BUY_FIF_QUANTITY,
                        SELL_ONE_PRICE,
                        SELL_ONE_QUANTITY,
                        SELL_TWO_PRICE,
                        SELL_TWO_QUANTITY,
                        SELL_THD_PRICE,
                        SELL_THD_QUANTITY,
                        SELL_FOU_PRICE,
                        SELL_FOU_QUANTITY,
                        SELL_FIF_PRICE,
                        SELL_FIF_QUANTITY,
                        INCREASE_PERCENT,
                        CHART};
                rowAISTOCK_STOCK_INFORMATIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAISTOCK_STOCK_INFORMATIONRow);
                return rowAISTOCK_STOCK_INFORMATIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AISTOCK_STOCK_INFORMATIONDataTable cln = ((AISTOCK_STOCK_INFORMATIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AISTOCK_STOCK_INFORMATIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSTOCK_ID = base.Columns["STOCK_ID"];
                this.columnSTOCK_CODE = base.Columns["STOCK_CODE"];
                this.columnSTOCK_NAME = base.Columns["STOCK_NAME"];
                this.columnSTOCK_DAY = base.Columns["STOCK_DAY"];
                this.columnTODAY_BEGIN = base.Columns["TODAY_BEGIN"];
                this.columnYESTERDAY_END = base.Columns["YESTERDAY_END"];
                this.columnTODAY_END = base.Columns["TODAY_END"];
                this.columnMAX_PRICE = base.Columns["MAX_PRICE"];
                this.columnMIN_PRICE = base.Columns["MIN_PRICE"];
                this.columnBUY_PRICE = base.Columns["BUY_PRICE"];
                this.columnSELL_PRICE = base.Columns["SELL_PRICE"];
                this.columnQUANTITY = base.Columns["QUANTITY"];
                this.columnTOTAL_MONEY = base.Columns["TOTAL_MONEY"];
                this.columnBUY_ONE_PRICE = base.Columns["BUY_ONE_PRICE"];
                this.columnBUY_ONE_QUANTITY = base.Columns["BUY_ONE_QUANTITY"];
                this.columnBUY_TWO_PRICE = base.Columns["BUY_TWO_PRICE"];
                this.columnBUY_TWO_QUANTITY = base.Columns["BUY_TWO_QUANTITY"];
                this.columnBUY_THD_PRICE = base.Columns["BUY_THD_PRICE"];
                this.columnBUY_THD_QUANTITY = base.Columns["BUY_THD_QUANTITY"];
                this.columnBUY_FOU_PRICE = base.Columns["BUY_FOU_PRICE"];
                this.columnBUY_FOU_QUANTITY = base.Columns["BUY_FOU_QUANTITY"];
                this.columnBUY_FIF_PRICE = base.Columns["BUY_FIF_PRICE"];
                this.columnBUY_FIF_QUANTITY = base.Columns["BUY_FIF_QUANTITY"];
                this.columnSELL_ONE_PRICE = base.Columns["SELL_ONE_PRICE"];
                this.columnSELL_ONE_QUANTITY = base.Columns["SELL_ONE_QUANTITY"];
                this.columnSELL_TWO_PRICE = base.Columns["SELL_TWO_PRICE"];
                this.columnSELL_TWO_QUANTITY = base.Columns["SELL_TWO_QUANTITY"];
                this.columnSELL_THD_PRICE = base.Columns["SELL_THD_PRICE"];
                this.columnSELL_THD_QUANTITY = base.Columns["SELL_THD_QUANTITY"];
                this.columnSELL_FOU_PRICE = base.Columns["SELL_FOU_PRICE"];
                this.columnSELL_FOU_QUANTITY = base.Columns["SELL_FOU_QUANTITY"];
                this.columnSELL_FIF_PRICE = base.Columns["SELL_FIF_PRICE"];
                this.columnSELL_FIF_QUANTITY = base.Columns["SELL_FIF_QUANTITY"];
                this.columnINCREASE_PERCENT = base.Columns["INCREASE_PERCENT"];
                this.columnCHART = base.Columns["CHART"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSTOCK_ID = new global::System.Data.DataColumn("STOCK_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_ID);
                this.columnSTOCK_CODE = new global::System.Data.DataColumn("STOCK_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_CODE);
                this.columnSTOCK_NAME = new global::System.Data.DataColumn("STOCK_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_NAME);
                this.columnSTOCK_DAY = new global::System.Data.DataColumn("STOCK_DAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_DAY);
                this.columnTODAY_BEGIN = new global::System.Data.DataColumn("TODAY_BEGIN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTODAY_BEGIN);
                this.columnYESTERDAY_END = new global::System.Data.DataColumn("YESTERDAY_END", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYESTERDAY_END);
                this.columnTODAY_END = new global::System.Data.DataColumn("TODAY_END", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTODAY_END);
                this.columnMAX_PRICE = new global::System.Data.DataColumn("MAX_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAX_PRICE);
                this.columnMIN_PRICE = new global::System.Data.DataColumn("MIN_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIN_PRICE);
                this.columnBUY_PRICE = new global::System.Data.DataColumn("BUY_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUY_PRICE);
                this.columnSELL_PRICE = new global::System.Data.DataColumn("SELL_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSELL_PRICE);
                this.columnQUANTITY = new global::System.Data.DataColumn("QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTITY);
                this.columnTOTAL_MONEY = new global::System.Data.DataColumn("TOTAL_MONEY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_MONEY);
                this.columnBUY_ONE_PRICE = new global::System.Data.DataColumn("BUY_ONE_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUY_ONE_PRICE);
                this.columnBUY_ONE_QUANTITY = new global::System.Data.DataColumn("BUY_ONE_QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUY_ONE_QUANTITY);
                this.columnBUY_TWO_PRICE = new global::System.Data.DataColumn("BUY_TWO_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUY_TWO_PRICE);
                this.columnBUY_TWO_QUANTITY = new global::System.Data.DataColumn("BUY_TWO_QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUY_TWO_QUANTITY);
                this.columnBUY_THD_PRICE = new global::System.Data.DataColumn("BUY_THD_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUY_THD_PRICE);
                this.columnBUY_THD_QUANTITY = new global::System.Data.DataColumn("BUY_THD_QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUY_THD_QUANTITY);
                this.columnBUY_FOU_PRICE = new global::System.Data.DataColumn("BUY_FOU_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUY_FOU_PRICE);
                this.columnBUY_FOU_QUANTITY = new global::System.Data.DataColumn("BUY_FOU_QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUY_FOU_QUANTITY);
                this.columnBUY_FIF_PRICE = new global::System.Data.DataColumn("BUY_FIF_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUY_FIF_PRICE);
                this.columnBUY_FIF_QUANTITY = new global::System.Data.DataColumn("BUY_FIF_QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUY_FIF_QUANTITY);
                this.columnSELL_ONE_PRICE = new global::System.Data.DataColumn("SELL_ONE_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSELL_ONE_PRICE);
                this.columnSELL_ONE_QUANTITY = new global::System.Data.DataColumn("SELL_ONE_QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSELL_ONE_QUANTITY);
                this.columnSELL_TWO_PRICE = new global::System.Data.DataColumn("SELL_TWO_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSELL_TWO_PRICE);
                this.columnSELL_TWO_QUANTITY = new global::System.Data.DataColumn("SELL_TWO_QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSELL_TWO_QUANTITY);
                this.columnSELL_THD_PRICE = new global::System.Data.DataColumn("SELL_THD_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSELL_THD_PRICE);
                this.columnSELL_THD_QUANTITY = new global::System.Data.DataColumn("SELL_THD_QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSELL_THD_QUANTITY);
                this.columnSELL_FOU_PRICE = new global::System.Data.DataColumn("SELL_FOU_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSELL_FOU_PRICE);
                this.columnSELL_FOU_QUANTITY = new global::System.Data.DataColumn("SELL_FOU_QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSELL_FOU_QUANTITY);
                this.columnSELL_FIF_PRICE = new global::System.Data.DataColumn("SELL_FIF_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSELL_FIF_PRICE);
                this.columnSELL_FIF_QUANTITY = new global::System.Data.DataColumn("SELL_FIF_QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSELL_FIF_QUANTITY);
                this.columnINCREASE_PERCENT = new global::System.Data.DataColumn("INCREASE_PERCENT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCREASE_PERCENT);
                this.columnCHART = new global::System.Data.DataColumn("CHART", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHART);
                this.columnSTOCK_ID.AllowDBNull = false;
                this.columnSTOCK_ID.MaxLength = 50;
                this.columnSTOCK_CODE.AllowDBNull = false;
                this.columnSTOCK_CODE.MaxLength = 8;
                this.columnSTOCK_NAME.MaxLength = 50;
                this.columnSTOCK_DAY.MaxLength = 8;
                this.columnCHART.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AISTOCK_STOCK_INFORMATIONRow NewAISTOCK_STOCK_INFORMATIONRow() {
                return ((AISTOCK_STOCK_INFORMATIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AISTOCK_STOCK_INFORMATIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AISTOCK_STOCK_INFORMATIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AISTOCK_STOCK_INFORMATIONRowChanged != null)) {
                    this.AISTOCK_STOCK_INFORMATIONRowChanged(this, new AISTOCK_STOCK_INFORMATIONRowChangeEvent(((AISTOCK_STOCK_INFORMATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AISTOCK_STOCK_INFORMATIONRowChanging != null)) {
                    this.AISTOCK_STOCK_INFORMATIONRowChanging(this, new AISTOCK_STOCK_INFORMATIONRowChangeEvent(((AISTOCK_STOCK_INFORMATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AISTOCK_STOCK_INFORMATIONRowDeleted != null)) {
                    this.AISTOCK_STOCK_INFORMATIONRowDeleted(this, new AISTOCK_STOCK_INFORMATIONRowChangeEvent(((AISTOCK_STOCK_INFORMATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AISTOCK_STOCK_INFORMATIONRowDeleting != null)) {
                    this.AISTOCK_STOCK_INFORMATIONRowDeleting(this, new AISTOCK_STOCK_INFORMATIONRowChangeEvent(((AISTOCK_STOCK_INFORMATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAISTOCK_STOCK_INFORMATIONRow(AISTOCK_STOCK_INFORMATIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AISTOCK_STOCK_STATS_DATA ds = new AISTOCK_STOCK_STATS_DATA();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AISTOCK_STOCK_INFORMATIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AISTOCK_STOCK_INFORMATIONRow : global::System.Data.DataRow {
            
            private AISTOCK_STOCK_INFORMATIONDataTable tableAISTOCK_STOCK_INFORMATION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AISTOCK_STOCK_INFORMATIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAISTOCK_STOCK_INFORMATION = ((AISTOCK_STOCK_INFORMATIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STOCK_ID {
                get {
                    return ((string)(this[this.tableAISTOCK_STOCK_INFORMATION.STOCK_IDColumn]));
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.STOCK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STOCK_CODE {
                get {
                    return ((string)(this[this.tableAISTOCK_STOCK_INFORMATION.STOCK_CODEColumn]));
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.STOCK_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STOCK_NAME {
                get {
                    try {
                        return ((string)(this[this.tableAISTOCK_STOCK_INFORMATION.STOCK_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“STOCK_NAME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.STOCK_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STOCK_DAY {
                get {
                    try {
                        return ((string)(this[this.tableAISTOCK_STOCK_INFORMATION.STOCK_DAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“STOCK_DAY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.STOCK_DAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TODAY_BEGIN {
                get {
                    try {
                        return ((decimal)(this[this.tableAISTOCK_STOCK_INFORMATION.TODAY_BEGINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“TODAY_BEGIN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.TODAY_BEGINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal YESTERDAY_END {
                get {
                    try {
                        return ((decimal)(this[this.tableAISTOCK_STOCK_INFORMATION.YESTERDAY_ENDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“YESTERDAY_END”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.YESTERDAY_ENDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TODAY_END {
                get {
                    try {
                        return ((decimal)(this[this.tableAISTOCK_STOCK_INFORMATION.TODAY_ENDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“TODAY_END”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.TODAY_ENDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MAX_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableAISTOCK_STOCK_INFORMATION.MAX_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“MAX_PRICE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.MAX_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MIN_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableAISTOCK_STOCK_INFORMATION.MIN_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“MIN_PRICE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.MIN_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BUY_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableAISTOCK_STOCK_INFORMATION.BUY_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“BUY_PRICE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.BUY_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SELL_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableAISTOCK_STOCK_INFORMATION.SELL_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“SELL_PRICE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.SELL_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int QUANTITY {
                get {
                    try {
                        return ((int)(this[this.tableAISTOCK_STOCK_INFORMATION.QUANTITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“QUANTITY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TOTAL_MONEY {
                get {
                    try {
                        return ((decimal)(this[this.tableAISTOCK_STOCK_INFORMATION.TOTAL_MONEYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“TOTAL_MONEY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.TOTAL_MONEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BUY_ONE_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableAISTOCK_STOCK_INFORMATION.BUY_ONE_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“BUY_ONE_PRICE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.BUY_ONE_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BUY_ONE_QUANTITY {
                get {
                    try {
                        return ((int)(this[this.tableAISTOCK_STOCK_INFORMATION.BUY_ONE_QUANTITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“BUY_ONE_QUANTITY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.BUY_ONE_QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BUY_TWO_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableAISTOCK_STOCK_INFORMATION.BUY_TWO_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“BUY_TWO_PRICE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.BUY_TWO_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BUY_TWO_QUANTITY {
                get {
                    try {
                        return ((int)(this[this.tableAISTOCK_STOCK_INFORMATION.BUY_TWO_QUANTITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“BUY_TWO_QUANTITY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.BUY_TWO_QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BUY_THD_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableAISTOCK_STOCK_INFORMATION.BUY_THD_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“BUY_THD_PRICE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.BUY_THD_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BUY_THD_QUANTITY {
                get {
                    try {
                        return ((int)(this[this.tableAISTOCK_STOCK_INFORMATION.BUY_THD_QUANTITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“BUY_THD_QUANTITY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.BUY_THD_QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BUY_FOU_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableAISTOCK_STOCK_INFORMATION.BUY_FOU_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“BUY_FOU_PRICE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.BUY_FOU_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BUY_FOU_QUANTITY {
                get {
                    try {
                        return ((int)(this[this.tableAISTOCK_STOCK_INFORMATION.BUY_FOU_QUANTITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“BUY_FOU_QUANTITY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.BUY_FOU_QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BUY_FIF_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableAISTOCK_STOCK_INFORMATION.BUY_FIF_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“BUY_FIF_PRICE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.BUY_FIF_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BUY_FIF_QUANTITY {
                get {
                    try {
                        return ((int)(this[this.tableAISTOCK_STOCK_INFORMATION.BUY_FIF_QUANTITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“BUY_FIF_QUANTITY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.BUY_FIF_QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SELL_ONE_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableAISTOCK_STOCK_INFORMATION.SELL_ONE_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“SELL_ONE_PRICE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.SELL_ONE_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SELL_ONE_QUANTITY {
                get {
                    try {
                        return ((int)(this[this.tableAISTOCK_STOCK_INFORMATION.SELL_ONE_QUANTITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“SELL_ONE_QUANTITY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.SELL_ONE_QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SELL_TWO_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableAISTOCK_STOCK_INFORMATION.SELL_TWO_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“SELL_TWO_PRICE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.SELL_TWO_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SELL_TWO_QUANTITY {
                get {
                    try {
                        return ((int)(this[this.tableAISTOCK_STOCK_INFORMATION.SELL_TWO_QUANTITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“SELL_TWO_QUANTITY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.SELL_TWO_QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SELL_THD_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableAISTOCK_STOCK_INFORMATION.SELL_THD_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“SELL_THD_PRICE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.SELL_THD_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SELL_THD_QUANTITY {
                get {
                    try {
                        return ((int)(this[this.tableAISTOCK_STOCK_INFORMATION.SELL_THD_QUANTITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“SELL_THD_QUANTITY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.SELL_THD_QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SELL_FOU_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableAISTOCK_STOCK_INFORMATION.SELL_FOU_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“SELL_FOU_PRICE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.SELL_FOU_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SELL_FOU_QUANTITY {
                get {
                    try {
                        return ((int)(this[this.tableAISTOCK_STOCK_INFORMATION.SELL_FOU_QUANTITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“SELL_FOU_QUANTITY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.SELL_FOU_QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SELL_FIF_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableAISTOCK_STOCK_INFORMATION.SELL_FIF_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“SELL_FIF_PRICE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.SELL_FIF_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SELL_FIF_QUANTITY {
                get {
                    try {
                        return ((int)(this[this.tableAISTOCK_STOCK_INFORMATION.SELL_FIF_QUANTITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“SELL_FIF_QUANTITY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.SELL_FIF_QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INCREASE_PERCENT {
                get {
                    try {
                        return ((decimal)(this[this.tableAISTOCK_STOCK_INFORMATION.INCREASE_PERCENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“INCREASE_PERCENT”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.INCREASE_PERCENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHART {
                get {
                    try {
                        return ((string)(this[this.tableAISTOCK_STOCK_INFORMATION.CHARTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AISTOCK_STOCK_INFORMATION”中列“CHART”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAISTOCK_STOCK_INFORMATION.CHARTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTOCK_NAMENull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.STOCK_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTOCK_NAMENull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.STOCK_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTOCK_DAYNull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.STOCK_DAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTOCK_DAYNull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.STOCK_DAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTODAY_BEGINNull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.TODAY_BEGINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTODAY_BEGINNull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.TODAY_BEGINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsYESTERDAY_ENDNull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.YESTERDAY_ENDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetYESTERDAY_ENDNull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.YESTERDAY_ENDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTODAY_ENDNull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.TODAY_ENDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTODAY_ENDNull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.TODAY_ENDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMAX_PRICENull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.MAX_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMAX_PRICENull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.MAX_PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMIN_PRICENull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.MIN_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMIN_PRICENull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.MIN_PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBUY_PRICENull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.BUY_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBUY_PRICENull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.BUY_PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSELL_PRICENull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.SELL_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSELL_PRICENull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.SELL_PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQUANTITYNull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.QUANTITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQUANTITYNull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.QUANTITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOTAL_MONEYNull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.TOTAL_MONEYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOTAL_MONEYNull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.TOTAL_MONEYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBUY_ONE_PRICENull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.BUY_ONE_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBUY_ONE_PRICENull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.BUY_ONE_PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBUY_ONE_QUANTITYNull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.BUY_ONE_QUANTITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBUY_ONE_QUANTITYNull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.BUY_ONE_QUANTITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBUY_TWO_PRICENull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.BUY_TWO_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBUY_TWO_PRICENull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.BUY_TWO_PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBUY_TWO_QUANTITYNull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.BUY_TWO_QUANTITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBUY_TWO_QUANTITYNull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.BUY_TWO_QUANTITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBUY_THD_PRICENull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.BUY_THD_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBUY_THD_PRICENull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.BUY_THD_PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBUY_THD_QUANTITYNull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.BUY_THD_QUANTITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBUY_THD_QUANTITYNull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.BUY_THD_QUANTITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBUY_FOU_PRICENull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.BUY_FOU_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBUY_FOU_PRICENull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.BUY_FOU_PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBUY_FOU_QUANTITYNull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.BUY_FOU_QUANTITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBUY_FOU_QUANTITYNull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.BUY_FOU_QUANTITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBUY_FIF_PRICENull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.BUY_FIF_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBUY_FIF_PRICENull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.BUY_FIF_PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBUY_FIF_QUANTITYNull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.BUY_FIF_QUANTITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBUY_FIF_QUANTITYNull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.BUY_FIF_QUANTITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSELL_ONE_PRICENull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.SELL_ONE_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSELL_ONE_PRICENull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.SELL_ONE_PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSELL_ONE_QUANTITYNull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.SELL_ONE_QUANTITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSELL_ONE_QUANTITYNull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.SELL_ONE_QUANTITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSELL_TWO_PRICENull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.SELL_TWO_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSELL_TWO_PRICENull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.SELL_TWO_PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSELL_TWO_QUANTITYNull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.SELL_TWO_QUANTITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSELL_TWO_QUANTITYNull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.SELL_TWO_QUANTITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSELL_THD_PRICENull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.SELL_THD_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSELL_THD_PRICENull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.SELL_THD_PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSELL_THD_QUANTITYNull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.SELL_THD_QUANTITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSELL_THD_QUANTITYNull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.SELL_THD_QUANTITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSELL_FOU_PRICENull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.SELL_FOU_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSELL_FOU_PRICENull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.SELL_FOU_PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSELL_FOU_QUANTITYNull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.SELL_FOU_QUANTITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSELL_FOU_QUANTITYNull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.SELL_FOU_QUANTITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSELL_FIF_PRICENull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.SELL_FIF_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSELL_FIF_PRICENull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.SELL_FIF_PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSELL_FIF_QUANTITYNull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.SELL_FIF_QUANTITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSELL_FIF_QUANTITYNull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.SELL_FIF_QUANTITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINCREASE_PERCENTNull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.INCREASE_PERCENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINCREASE_PERCENTNull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.INCREASE_PERCENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHARTNull() {
                return this.IsNull(this.tableAISTOCK_STOCK_INFORMATION.CHARTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHARTNull() {
                this[this.tableAISTOCK_STOCK_INFORMATION.CHARTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AISTOCK_STOCK_INFORMATIONRowChangeEvent : global::System.EventArgs {
            
            private AISTOCK_STOCK_INFORMATIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AISTOCK_STOCK_INFORMATIONRowChangeEvent(AISTOCK_STOCK_INFORMATIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AISTOCK_STOCK_INFORMATIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace AISRS.Common.Data.AISTOCK_STOCK_STATS_DATATableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AISTOCK_STOCK_INFORMATIONTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AISTOCK_STOCK_INFORMATIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AISTOCK_STOCK_INFORMATION";
            tableMapping.ColumnMappings.Add("STOCK_ID", "STOCK_ID");
            tableMapping.ColumnMappings.Add("STOCK_CODE", "STOCK_CODE");
            tableMapping.ColumnMappings.Add("STOCK_NAME", "STOCK_NAME");
            tableMapping.ColumnMappings.Add("STOCK_DAY", "STOCK_DAY");
            tableMapping.ColumnMappings.Add("TODAY_BEGIN", "TODAY_BEGIN");
            tableMapping.ColumnMappings.Add("YESTERDAY_END", "YESTERDAY_END");
            tableMapping.ColumnMappings.Add("TODAY_END", "TODAY_END");
            tableMapping.ColumnMappings.Add("MAX_PRICE", "MAX_PRICE");
            tableMapping.ColumnMappings.Add("MIN_PRICE", "MIN_PRICE");
            tableMapping.ColumnMappings.Add("BUY_PRICE", "BUY_PRICE");
            tableMapping.ColumnMappings.Add("SELL_PRICE", "SELL_PRICE");
            tableMapping.ColumnMappings.Add("QUANTITY", "QUANTITY");
            tableMapping.ColumnMappings.Add("TOTAL_MONEY", "TOTAL_MONEY");
            tableMapping.ColumnMappings.Add("BUY_ONE_PRICE", "BUY_ONE_PRICE");
            tableMapping.ColumnMappings.Add("BUY_ONE_QUANTITY", "BUY_ONE_QUANTITY");
            tableMapping.ColumnMappings.Add("BUY_TWO_PRICE", "BUY_TWO_PRICE");
            tableMapping.ColumnMappings.Add("BUY_TWO_QUANTITY", "BUY_TWO_QUANTITY");
            tableMapping.ColumnMappings.Add("BUY_THD_PRICE", "BUY_THD_PRICE");
            tableMapping.ColumnMappings.Add("BUY_THD_QUANTITY", "BUY_THD_QUANTITY");
            tableMapping.ColumnMappings.Add("BUY_FOU_PRICE", "BUY_FOU_PRICE");
            tableMapping.ColumnMappings.Add("BUY_FOU_QUANTITY", "BUY_FOU_QUANTITY");
            tableMapping.ColumnMappings.Add("BUY_FIF_PRICE", "BUY_FIF_PRICE");
            tableMapping.ColumnMappings.Add("BUY_FIF_QUANTITY", "BUY_FIF_QUANTITY");
            tableMapping.ColumnMappings.Add("SELL_ONE_PRICE", "SELL_ONE_PRICE");
            tableMapping.ColumnMappings.Add("SELL_ONE_QUANTITY", "SELL_ONE_QUANTITY");
            tableMapping.ColumnMappings.Add("SELL_TWO_PRICE", "SELL_TWO_PRICE");
            tableMapping.ColumnMappings.Add("SELL_TWO_QUANTITY", "SELL_TWO_QUANTITY");
            tableMapping.ColumnMappings.Add("SELL_THD_PRICE", "SELL_THD_PRICE");
            tableMapping.ColumnMappings.Add("SELL_THD_QUANTITY", "SELL_THD_QUANTITY");
            tableMapping.ColumnMappings.Add("SELL_FOU_PRICE", "SELL_FOU_PRICE");
            tableMapping.ColumnMappings.Add("SELL_FOU_QUANTITY", "SELL_FOU_QUANTITY");
            tableMapping.ColumnMappings.Add("SELL_FIF_PRICE", "SELL_FIF_PRICE");
            tableMapping.ColumnMappings.Add("SELL_FIF_QUANTITY", "SELL_FIF_QUANTITY");
            tableMapping.ColumnMappings.Add("INCREASE_PERCENT", "INCREASE_PERCENT");
            tableMapping.ColumnMappings.Add("CHART", "CHART");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[AISTOCK_STOCK_INFORMATION] ([STOCK_ID], [STOCK_CODE], [STOCK_NAME], [STOCK_DAY], [TODAY_BEGIN], [YESTERDAY_END], [TODAY_END], [MAX_PRICE], [MIN_PRICE], [BUY_PRICE], [SELL_PRICE], [QUANTITY], [TOTAL_MONEY], [BUY_ONE_PRICE], [BUY_ONE_QUANTITY], [BUY_TWO_PRICE], [BUY_TWO_QUANTITY], [BUY_THD_PRICE], [BUY_THD_QUANTITY], [BUY_FOU_PRICE], [BUY_FOU_QUANTITY], [BUY_FIF_PRICE], [BUY_FIF_QUANTITY], [SELL_ONE_PRICE], [SELL_ONE_QUANTITY], [SELL_TWO_PRICE], [SELL_TWO_QUANTITY], [SELL_THD_PRICE], [SELL_THD_QUANTITY], [SELL_FOU_PRICE], [SELL_FOU_QUANTITY], [SELL_FIF_PRICE], [SELL_FIF_QUANTITY], [INCREASE_PERCENT], [CHART]) VALUES (@STOCK_ID, @STOCK_CODE, @STOCK_NAME, @STOCK_DAY, @TODAY_BEGIN, @YESTERDAY_END, @TODAY_END, @MAX_PRICE, @MIN_PRICE, @BUY_PRICE, @SELL_PRICE, @QUANTITY, @TOTAL_MONEY, @BUY_ONE_PRICE, @BUY_ONE_QUANTITY, @BUY_TWO_PRICE, @BUY_TWO_QUANTITY, @BUY_THD_PRICE, @BUY_THD_QUANTITY, @BUY_FOU_PRICE, @BUY_FOU_QUANTITY, @BUY_FIF_PRICE, @BUY_FIF_QUANTITY, @SELL_ONE_PRICE, @SELL_ONE_QUANTITY, @SELL_TWO_PRICE, @SELL_TWO_QUANTITY, @SELL_THD_PRICE, @SELL_THD_QUANTITY, @SELL_FOU_PRICE, @SELL_FOU_QUANTITY, @SELL_FIF_PRICE, @SELL_FIF_QUANTITY, @INCREASE_PERCENT, @CHART)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_CODE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_DAY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_DAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TODAY_BEGIN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "TODAY_BEGIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YESTERDAY_END", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "YESTERDAY_END", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TODAY_END", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "TODAY_END", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAX_PRICE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "MAX_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIN_PRICE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "MIN_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BUY_PRICE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "BUY_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SELL_PRICE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "SELL_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTAL_MONEY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "TOTAL_MONEY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BUY_ONE_PRICE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "BUY_ONE_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BUY_ONE_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BUY_ONE_QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BUY_TWO_PRICE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "BUY_TWO_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BUY_TWO_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BUY_TWO_QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BUY_THD_PRICE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "BUY_THD_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BUY_THD_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BUY_THD_QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BUY_FOU_PRICE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "BUY_FOU_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BUY_FOU_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BUY_FOU_QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BUY_FIF_PRICE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "BUY_FIF_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BUY_FIF_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BUY_FIF_QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SELL_ONE_PRICE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "SELL_ONE_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SELL_ONE_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SELL_ONE_QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SELL_TWO_PRICE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "SELL_TWO_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SELL_TWO_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SELL_TWO_QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SELL_THD_PRICE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "SELL_THD_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SELL_THD_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SELL_THD_QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SELL_FOU_PRICE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "SELL_FOU_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SELL_FOU_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SELL_FOU_QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SELL_FIF_PRICE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "SELL_FIF_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SELL_FIF_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SELL_FIF_QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INCREASE_PERCENT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "INCREASE_PERCENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHART", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHART", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AISRS.Common.Properties.Settings.Default.AISTOCKConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT STOCK_ID, STOCK_CODE, STOCK_NAME, STOCK_DAY, TODAY_BEGIN, YESTERDAY_END, TODAY_END, MAX_PRICE, MIN_PRICE, BUY_PRICE, SELL_PRICE, QUANTITY, TOTAL_MONEY, BUY_ONE_PRICE, BUY_ONE_QUANTITY, BUY_TWO_PRICE, BUY_TWO_QUANTITY, BUY_THD_PRICE, BUY_THD_QUANTITY, BUY_FOU_PRICE, BUY_FOU_QUANTITY, BUY_FIF_PRICE, BUY_FIF_QUANTITY, SELL_ONE_PRICE, SELL_ONE_QUANTITY, SELL_TWO_PRICE, SELL_TWO_QUANTITY, SELL_THD_PRICE, SELL_THD_QUANTITY, SELL_FOU_PRICE, SELL_FOU_QUANTITY, SELL_FIF_PRICE, SELL_FIF_QUANTITY, INCREASE_PERCENT, CHART FROM dbo.AISTOCK_STOCK_INFORMATION";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AISTOCK_STOCK_STATS_DATA.AISTOCK_STOCK_INFORMATIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AISTOCK_STOCK_STATS_DATA.AISTOCK_STOCK_INFORMATIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AISTOCK_STOCK_STATS_DATA.AISTOCK_STOCK_INFORMATIONDataTable dataTable = new AISTOCK_STOCK_STATS_DATA.AISTOCK_STOCK_INFORMATIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AISTOCK_STOCK_STATS_DATA.AISTOCK_STOCK_INFORMATIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AISTOCK_STOCK_STATS_DATA dataSet) {
            return this.Adapter.Update(dataSet, "AISTOCK_STOCK_INFORMATION");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string STOCK_ID, 
                    string STOCK_CODE, 
                    string STOCK_NAME, 
                    string STOCK_DAY, 
                    global::System.Nullable<decimal> TODAY_BEGIN, 
                    global::System.Nullable<decimal> YESTERDAY_END, 
                    global::System.Nullable<decimal> TODAY_END, 
                    global::System.Nullable<decimal> MAX_PRICE, 
                    global::System.Nullable<decimal> MIN_PRICE, 
                    global::System.Nullable<decimal> BUY_PRICE, 
                    global::System.Nullable<decimal> SELL_PRICE, 
                    global::System.Nullable<int> QUANTITY, 
                    global::System.Nullable<decimal> TOTAL_MONEY, 
                    global::System.Nullable<decimal> BUY_ONE_PRICE, 
                    global::System.Nullable<int> BUY_ONE_QUANTITY, 
                    global::System.Nullable<decimal> BUY_TWO_PRICE, 
                    global::System.Nullable<int> BUY_TWO_QUANTITY, 
                    global::System.Nullable<decimal> BUY_THD_PRICE, 
                    global::System.Nullable<int> BUY_THD_QUANTITY, 
                    global::System.Nullable<decimal> BUY_FOU_PRICE, 
                    global::System.Nullable<int> BUY_FOU_QUANTITY, 
                    global::System.Nullable<decimal> BUY_FIF_PRICE, 
                    global::System.Nullable<int> BUY_FIF_QUANTITY, 
                    global::System.Nullable<decimal> SELL_ONE_PRICE, 
                    global::System.Nullable<int> SELL_ONE_QUANTITY, 
                    global::System.Nullable<decimal> SELL_TWO_PRICE, 
                    global::System.Nullable<int> SELL_TWO_QUANTITY, 
                    global::System.Nullable<decimal> SELL_THD_PRICE, 
                    global::System.Nullable<int> SELL_THD_QUANTITY, 
                    global::System.Nullable<decimal> SELL_FOU_PRICE, 
                    global::System.Nullable<int> SELL_FOU_QUANTITY, 
                    global::System.Nullable<decimal> SELL_FIF_PRICE, 
                    global::System.Nullable<int> SELL_FIF_QUANTITY, 
                    global::System.Nullable<decimal> INCREASE_PERCENT, 
                    string CHART) {
            if ((STOCK_ID == null)) {
                throw new global::System.ArgumentNullException("STOCK_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(STOCK_ID));
            }
            if ((STOCK_CODE == null)) {
                throw new global::System.ArgumentNullException("STOCK_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(STOCK_CODE));
            }
            if ((STOCK_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(STOCK_NAME));
            }
            if ((STOCK_DAY == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(STOCK_DAY));
            }
            if ((TODAY_BEGIN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(TODAY_BEGIN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((YESTERDAY_END.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(YESTERDAY_END.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((TODAY_END.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(TODAY_END.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((MAX_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(MAX_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((MIN_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(MIN_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((BUY_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(BUY_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((SELL_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(SELL_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((QUANTITY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(QUANTITY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((TOTAL_MONEY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(TOTAL_MONEY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((BUY_ONE_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(BUY_ONE_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((BUY_ONE_QUANTITY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(BUY_ONE_QUANTITY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((BUY_TWO_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(BUY_TWO_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((BUY_TWO_QUANTITY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(BUY_TWO_QUANTITY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((BUY_THD_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(BUY_THD_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((BUY_THD_QUANTITY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(BUY_THD_QUANTITY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((BUY_FOU_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(BUY_FOU_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((BUY_FOU_QUANTITY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(BUY_FOU_QUANTITY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((BUY_FIF_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(BUY_FIF_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((BUY_FIF_QUANTITY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(BUY_FIF_QUANTITY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((SELL_ONE_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(SELL_ONE_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((SELL_ONE_QUANTITY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(SELL_ONE_QUANTITY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((SELL_TWO_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(SELL_TWO_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((SELL_TWO_QUANTITY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(SELL_TWO_QUANTITY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((SELL_THD_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(SELL_THD_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((SELL_THD_QUANTITY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(SELL_THD_QUANTITY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((SELL_FOU_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(SELL_FOU_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((SELL_FOU_QUANTITY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((int)(SELL_FOU_QUANTITY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((SELL_FIF_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(SELL_FIF_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((SELL_FIF_QUANTITY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((int)(SELL_FIF_QUANTITY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((INCREASE_PERCENT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(INCREASE_PERCENT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((CHART == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(CHART));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private AISTOCK_STOCK_INFORMATIONTableAdapter _aISTOCK_STOCK_INFORMATIONTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public AISTOCK_STOCK_INFORMATIONTableAdapter AISTOCK_STOCK_INFORMATIONTableAdapter {
            get {
                return this._aISTOCK_STOCK_INFORMATIONTableAdapter;
            }
            set {
                this._aISTOCK_STOCK_INFORMATIONTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._aISTOCK_STOCK_INFORMATIONTableAdapter != null) 
                            && (this._aISTOCK_STOCK_INFORMATIONTableAdapter.Connection != null))) {
                    return this._aISTOCK_STOCK_INFORMATIONTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._aISTOCK_STOCK_INFORMATIONTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(AISTOCK_STOCK_STATS_DATA dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aISTOCK_STOCK_INFORMATIONTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.AISTOCK_STOCK_INFORMATION.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aISTOCK_STOCK_INFORMATIONTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(AISTOCK_STOCK_STATS_DATA dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aISTOCK_STOCK_INFORMATIONTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.AISTOCK_STOCK_INFORMATION.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aISTOCK_STOCK_INFORMATIONTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(AISTOCK_STOCK_STATS_DATA dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._aISTOCK_STOCK_INFORMATIONTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.AISTOCK_STOCK_INFORMATION.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aISTOCK_STOCK_INFORMATIONTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(AISTOCK_STOCK_STATS_DATA dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._aISTOCK_STOCK_INFORMATIONTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aISTOCK_STOCK_INFORMATIONTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 不包含任何连接信息。请将每个 TableAdapterManager TableAdapter 属性设置为有效的 Tabl" +
                        "eAdapter 实例。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("事务无法开始。当前的数据连接不支持事务或当前状态不允许事务开始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._aISTOCK_STOCK_INFORMATIONTableAdapter != null)) {
                    revertConnections.Add(this._aISTOCK_STOCK_INFORMATIONTableAdapter, this._aISTOCK_STOCK_INFORMATIONTableAdapter.Connection);
                    this._aISTOCK_STOCK_INFORMATIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._aISTOCK_STOCK_INFORMATIONTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._aISTOCK_STOCK_INFORMATIONTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aISTOCK_STOCK_INFORMATIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aISTOCK_STOCK_INFORMATIONTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._aISTOCK_STOCK_INFORMATIONTableAdapter != null)) {
                    this._aISTOCK_STOCK_INFORMATIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._aISTOCK_STOCK_INFORMATIONTableAdapter]));
                    this._aISTOCK_STOCK_INFORMATIONTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591